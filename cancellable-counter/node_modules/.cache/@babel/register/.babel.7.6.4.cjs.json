{
  "{\"sourceRoot\":\"/Users/fatihinci/Desktop/code/calismalar/redux-saga/examples/cancellable-counter/test\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/fatihinci/Desktop/code/calismalar/redux-saga/examples/cancellable-counter\",\"filename\":\"/Users/fatihinci/Desktop/code/calismalar/redux-saga/examples/cancellable-counter/test/sagas.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"cjs\",\"root\":\"/Users/fatihinci/Desktop/code/calismalar/redux-saga/examples/cancellable-counter\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"syntax-dynamic-import\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4:cjs": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/fatihinci/Desktop/code/calismalar/redux-saga/examples/cancellable-counter/test",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/fatihinci/Desktop/code/calismalar/redux-saga/examples/cancellable-counter",
      "filename": "/Users/fatihinci/Desktop/code/calismalar/redux-saga/examples/cancellable-counter/test/sagas.js",
      "babelrc": false,
      "configFile": false,
      "envName": "cjs",
      "root": "/Users/fatihinci/Desktop/code/calismalar/redux-saga/examples/cancellable-counter",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-dynamic-import",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/fatihinci/Desktop/code/calismalar/redux-saga/examples/cancellable-counter/test/sagas.js",
        "plugins": [
          "jsx",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/fatihinci/Desktop/code/calismalar/redux-saga/examples/cancellable-counter/test/sagas.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/fatihinci/Desktop/code/calismalar/redux-saga/examples/cancellable-counter/test",
        "sourceFileName": "sagas.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _tape = _interopRequireDefault(require(\"tape\"));\n\nvar _effects = require(\"redux-saga/effects\");\n\nvar _actionTypes = require(\"../src/actionTypes\");\n\nvar _sagas = require(\"../src/sagas\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar getState = function getState() {\n  return {\n    value: 10\n  };\n};\n\nvar action = function action(type) {\n  return {\n    type: type\n  };\n};\n\n(0, _tape[\"default\"])('watchIncrementAsync Saga',\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(t) {\n    var generator, next;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            generator = (0, _sagas.watchIncrementAsync)();\n            next = generator.next();\n            t.deepEqual(next.value, (0, _effects.take)(_actionTypes.INCREMENT_ASYNC), 'watchIncrementAsync takes INCRMEMENT_ASYNC action');\n            next = generator.next(getState());\n            t.deepEqual(next.value, (0, _effects.race)([(0, _effects.call)(_sagas.incrementAsync, getState()), (0, _effects.take)(_actionTypes.CANCEL_INCREMENT_ASYNC)]), 'starts Race between async incremention and cancellation');\n            t.end();\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}());\n(0, _tape[\"default\"])('incrementAsync Saga successful',\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee2(t) {\n    var generator, next, chan;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            generator = (0, _sagas.incrementAsync)(getState());\n            next = generator.next();\n            t.deepEqual(next.value, (0, _effects.call)(_sagas.countdown, getState().value), 'counter Saga instantiates channel emitter');\n            chan = (0, _sagas.countdown)(getState().value);\n            next = generator.next(chan);\n            t.deepEqual(next.value, (0, _effects.take)(chan), 'take action from eventChannel');\n            next = generator.next(9);\n            t.deepEqual(next.value, (0, _effects.put)({\n              type: _actionTypes.INCREMENT_ASYNC,\n              value: 9\n            }), 'updates countdown value in the store'); //end smoothly the saga\n\n            next = generator[\"return\"]();\n            t.deepEqual(next.value, (0, _effects.cancelled)(), 'eventEmitter is done'); //resume the saga\n\n            next = generator.next(false);\n            t.deepEqual(next.value, (0, _effects.put)(action(_actionTypes.INCREMENT)), 'Actual increment is performed');\n            next = generator.next();\n            t.deepEqual(next.value, (0, _effects.put)(action(_actionTypes.COUNTDOWN_TERMINATED)), 'The countdown is terminated');\n            t.end();\n\n          case 15:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}());\n(0, _tape[\"default\"])('incrementAsync Saga with cancellation',\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee3(t) {\n    var generator, next, chan;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            generator = (0, _sagas.incrementAsync)(getState());\n            next = generator.next();\n            t.deepEqual(next.value, (0, _effects.call)(_sagas.countdown, getState().value), 'instanciation of the channel emitter with the provided value to wait');\n            chan = (0, _sagas.countdown)(getState().value);\n            next = generator.next(chan);\n            t.deepEqual(next.value, (0, _effects.take)(chan), 'takes action from eventChannel');\n            next = generator.next(9);\n            t.deepEqual(next.value, (0, _effects.put)({\n              type: _actionTypes.INCREMENT_ASYNC,\n              value: 9\n            }), 'put counter value to store'); //end the saga\n\n            next = generator[\"return\"]();\n            t.deepEqual(next.value, (0, _effects.cancelled)(), 'eventEmitter is done'); //resume the saga with a cancel call\n\n            next = generator.next(true);\n            t.deepEqual(next.done, true, 'Saga is done');\n            t.end();\n\n          case 13:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function (_x3) {\n    return _ref3.apply(this, arguments);\n  };\n}());\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "sagas.js"
      ],
      "names": [
        "getState",
        "value",
        "action",
        "type",
        "t",
        "generator",
        "next",
        "deepEqual",
        "INCREMENT_ASYNC",
        "incrementAsync",
        "CANCEL_INCREMENT_ASYNC",
        "end",
        "countdown",
        "chan",
        "INCREMENT",
        "COUNTDOWN_TERMINATED",
        "done"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;AAOA;;;;;;;;AAEA,IAAMA,QAAQ,GAAG,SAAXA,QAAW;AAAA,SAAO;AACtBC,IAAAA,KAAK,EAAE;AADe,GAAP;AAAA,CAAjB;;AAGA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,IAAI;AAAA,SAAK;AAAEA,IAAAA,IAAI,EAAJA;AAAF,GAAL;AAAA,CAAnB;;AAEA,sBAAK,0BAAL;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAiC,iBAAMC,CAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACzBC,YAAAA,SADyB,GACb,iCADa;AAI/BC,YAAAA,IAAI,GAAGD,SAAS,CAACC,IAAV,EAAP;AACAF,YAAAA,CAAC,CAACG,SAAF,CACED,IAAI,CAACL,KADP,EAEE,mBAAKO,4BAAL,CAFF,EAGE,mDAHF;AAMAF,YAAAA,IAAI,GAAGD,SAAS,CAACC,IAAV,CAAeN,QAAQ,EAAvB,CAAP;AACAI,YAAAA,CAAC,CAACG,SAAF,CACED,IAAI,CAACL,KADP,EAEE,mBAAK,CAAC,mBAAKQ,qBAAL,EAAqBT,QAAQ,EAA7B,CAAD,EAAmC,mBAAKU,mCAAL,CAAnC,CAAL,CAFF,EAGE,yDAHF;AAMAN,YAAAA,CAAC,CAACO,GAAF;;AAlB+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjC;;AAAA;AAAA;AAAA;AAAA;AAqBA,sBAAK,gCAAL;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAuC,kBAAMP,CAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAC/BC,YAAAA,SAD+B,GACnB,2BAAeL,QAAQ,EAAvB,CADmB;AAIrCM,YAAAA,IAAI,GAAGD,SAAS,CAACC,IAAV,EAAP;AACAF,YAAAA,CAAC,CAACG,SAAF,CACED,IAAI,CAACL,KADP,EAEE,mBAAKW,gBAAL,EAAgBZ,QAAQ,GAAGC,KAA3B,CAFF,EAGE,2CAHF;AAMMY,YAAAA,IAX+B,GAWxB,sBAAUb,QAAQ,GAAGC,KAArB,CAXwB;AAarCK,YAAAA,IAAI,GAAGD,SAAS,CAACC,IAAV,CAAeO,IAAf,CAAP;AACAT,YAAAA,CAAC,CAACG,SAAF,CAAYD,IAAI,CAACL,KAAjB,EAAwB,mBAAKY,IAAL,CAAxB,EAAoC,+BAApC;AAEAP,YAAAA,IAAI,GAAGD,SAAS,CAACC,IAAV,CAAe,CAAf,CAAP;AACAF,YAAAA,CAAC,CAACG,SAAF,CACED,IAAI,CAACL,KADP,EAEE,kBAAI;AAAEE,cAAAA,IAAI,EAAEK,4BAAR;AAAyBP,cAAAA,KAAK,EAAE;AAAhC,aAAJ,CAFF,EAGE,sCAHF,EAjBqC,CAuBrC;;AACAK,YAAAA,IAAI,GAAGD,SAAS,UAAT,EAAP;AACAD,YAAAA,CAAC,CAACG,SAAF,CAAYD,IAAI,CAACL,KAAjB,EAAwB,yBAAxB,EAAqC,sBAArC,EAzBqC,CA2BrC;;AACAK,YAAAA,IAAI,GAAGD,SAAS,CAACC,IAAV,CAAe,KAAf,CAAP;AACAF,YAAAA,CAAC,CAACG,SAAF,CACED,IAAI,CAACL,KADP,EAEE,kBAAIC,MAAM,CAACY,sBAAD,CAAV,CAFF,EAGE,+BAHF;AAMAR,YAAAA,IAAI,GAAGD,SAAS,CAACC,IAAV,EAAP;AACAF,YAAAA,CAAC,CAACG,SAAF,CACED,IAAI,CAACL,KADP,EAEE,kBAAIC,MAAM,CAACa,iCAAD,CAAV,CAFF,EAGE,6BAHF;AAMAX,YAAAA,CAAC,CAACO,GAAF;;AA1CqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvC;;AAAA;AAAA;AAAA;AAAA;AA6CA,sBAAK,uCAAL;AAAA;AAAA;AAAA;AAAA;AAAA,0BAA8C,kBAAMP,CAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACtCC,YAAAA,SADsC,GAC1B,2BAAeL,QAAQ,EAAvB,CAD0B;AAI5CM,YAAAA,IAAI,GAAGD,SAAS,CAACC,IAAV,EAAP;AAEAF,YAAAA,CAAC,CAACG,SAAF,CACED,IAAI,CAACL,KADP,EAEE,mBAAKW,gBAAL,EAAgBZ,QAAQ,GAAGC,KAA3B,CAFF,EAGE,sEAHF;AAMMY,YAAAA,IAZsC,GAY/B,sBAAUb,QAAQ,GAAGC,KAArB,CAZ+B;AAc5CK,YAAAA,IAAI,GAAGD,SAAS,CAACC,IAAV,CAAeO,IAAf,CAAP;AACAT,YAAAA,CAAC,CAACG,SAAF,CAAYD,IAAI,CAACL,KAAjB,EAAwB,mBAAKY,IAAL,CAAxB,EAAoC,gCAApC;AAEAP,YAAAA,IAAI,GAAGD,SAAS,CAACC,IAAV,CAAe,CAAf,CAAP;AACAF,YAAAA,CAAC,CAACG,SAAF,CACED,IAAI,CAACL,KADP,EAEE,kBAAI;AAAEE,cAAAA,IAAI,EAAEK,4BAAR;AAAyBP,cAAAA,KAAK,EAAE;AAAhC,aAAJ,CAFF,EAGE,4BAHF,EAlB4C,CAwB5C;;AACAK,YAAAA,IAAI,GAAGD,SAAS,UAAT,EAAP;AACAD,YAAAA,CAAC,CAACG,SAAF,CAAYD,IAAI,CAACL,KAAjB,EAAwB,yBAAxB,EAAqC,sBAArC,EA1B4C,CA4B5C;;AACAK,YAAAA,IAAI,GAAGD,SAAS,CAACC,IAAV,CAAe,IAAf,CAAP;AACAF,YAAAA,CAAC,CAACG,SAAF,CAAYD,IAAI,CAACU,IAAjB,EAAuB,IAAvB,EAA6B,cAA7B;AAEAZ,YAAAA,CAAC,CAACO,GAAF;;AAhC4C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA9C;;AAAA;AAAA;AAAA;AAAA",
      "sourceRoot": "/Users/fatihinci/Desktop/code/calismalar/redux-saga/examples/cancellable-counter/test",
      "sourcesContent": [
        "import test from 'tape'\nimport { take, put, race, call, cancelled } from 'redux-saga/effects'\nimport {\n  INCREMENT_ASYNC,\n  INCREMENT,\n  CANCEL_INCREMENT_ASYNC,\n  COUNTDOWN_TERMINATED,\n} from '../src/actionTypes'\n\nimport { watchIncrementAsync, incrementAsync, countdown } from '../src/sagas'\n\nconst getState = () => ({\n  value: 10,\n})\nconst action = type => ({ type })\n\ntest('watchIncrementAsync Saga', async t => {\n  const generator = watchIncrementAsync()\n  let next\n\n  next = generator.next()\n  t.deepEqual(\n    next.value,\n    take(INCREMENT_ASYNC),\n    'watchIncrementAsync takes INCRMEMENT_ASYNC action',\n  )\n\n  next = generator.next(getState())\n  t.deepEqual(\n    next.value,\n    race([call(incrementAsync, getState()), take(CANCEL_INCREMENT_ASYNC)]),\n    'starts Race between async incremention and cancellation',\n  )\n\n  t.end()\n})\n\ntest('incrementAsync Saga successful', async t => {\n  const generator = incrementAsync(getState())\n  let next\n\n  next = generator.next()\n  t.deepEqual(\n    next.value,\n    call(countdown, getState().value),\n    'counter Saga instantiates channel emitter',\n  )\n\n  const chan = countdown(getState().value)\n\n  next = generator.next(chan)\n  t.deepEqual(next.value, take(chan), 'take action from eventChannel')\n\n  next = generator.next(9)\n  t.deepEqual(\n    next.value,\n    put({ type: INCREMENT_ASYNC, value: 9 }),\n    'updates countdown value in the store',\n  )\n\n  //end smoothly the saga\n  next = generator.return()\n  t.deepEqual(next.value, cancelled(), 'eventEmitter is done')\n\n  //resume the saga\n  next = generator.next(false)\n  t.deepEqual(\n    next.value,\n    put(action(INCREMENT)),\n    'Actual increment is performed',\n  )\n\n  next = generator.next()\n  t.deepEqual(\n    next.value,\n    put(action(COUNTDOWN_TERMINATED)),\n    'The countdown is terminated',\n  )\n\n  t.end()\n})\n\ntest('incrementAsync Saga with cancellation', async t => {\n  const generator = incrementAsync(getState())\n  let next\n\n  next = generator.next()\n\n  t.deepEqual(\n    next.value,\n    call(countdown, getState().value),\n    'instanciation of the channel emitter with the provided value to wait',\n  )\n\n  const chan = countdown(getState().value)\n\n  next = generator.next(chan)\n  t.deepEqual(next.value, take(chan), 'takes action from eventChannel')\n\n  next = generator.next(9)\n  t.deepEqual(\n    next.value,\n    put({ type: INCREMENT_ASYNC, value: 9 }),\n    'put counter value to store',\n  )\n\n  //end the saga\n  next = generator.return()\n  t.deepEqual(next.value, cancelled(), 'eventEmitter is done')\n\n  //resume the saga with a cancel call\n  next = generator.next(true)\n  t.deepEqual(next.done, true, 'Saga is done')\n\n  t.end()\n})\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1668276197698
  },
  "{\"sourceRoot\":\"/Users/fatihinci/Desktop/code/calismalar/redux-saga/examples/cancellable-counter/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/fatihinci/Desktop/code/calismalar/redux-saga/examples/cancellable-counter\",\"filename\":\"/Users/fatihinci/Desktop/code/calismalar/redux-saga/examples/cancellable-counter/src/actionTypes.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"cjs\",\"root\":\"/Users/fatihinci/Desktop/code/calismalar/redux-saga/examples/cancellable-counter\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"syntax-dynamic-import\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4:cjs": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/fatihinci/Desktop/code/calismalar/redux-saga/examples/cancellable-counter/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/fatihinci/Desktop/code/calismalar/redux-saga/examples/cancellable-counter",
      "filename": "/Users/fatihinci/Desktop/code/calismalar/redux-saga/examples/cancellable-counter/src/actionTypes.js",
      "babelrc": false,
      "configFile": false,
      "envName": "cjs",
      "root": "/Users/fatihinci/Desktop/code/calismalar/redux-saga/examples/cancellable-counter",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-dynamic-import",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/fatihinci/Desktop/code/calismalar/redux-saga/examples/cancellable-counter/src/actionTypes.js",
        "plugins": [
          "jsx",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/fatihinci/Desktop/code/calismalar/redux-saga/examples/cancellable-counter/src/actionTypes.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/fatihinci/Desktop/code/calismalar/redux-saga/examples/cancellable-counter/src",
        "sourceFileName": "actionTypes.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.COUNTDOWN_TERMINATED = exports.CANCEL_INCREMENT_ASYNC = exports.INCREMENT_ASYNC = exports.INCREMENT_IF_ODD = exports.DECREMENT = exports.INCREMENT = void 0;\n// Action types\nvar INCREMENT = 'INCREMENT';\nexports.INCREMENT = INCREMENT;\nvar DECREMENT = 'DECREMENT';\nexports.DECREMENT = DECREMENT;\nvar INCREMENT_IF_ODD = 'INCREMENT_IF_ODD';\nexports.INCREMENT_IF_ODD = INCREMENT_IF_ODD;\nvar INCREMENT_ASYNC = 'INCREMENT_ASYNC';\nexports.INCREMENT_ASYNC = INCREMENT_ASYNC;\nvar CANCEL_INCREMENT_ASYNC = 'CANCEL_INCREMENT_ASYNC';\nexports.CANCEL_INCREMENT_ASYNC = CANCEL_INCREMENT_ASYNC;\nvar COUNTDOWN_TERMINATED = 'COUNTDOWN_TERMINATED';\nexports.COUNTDOWN_TERMINATED = COUNTDOWN_TERMINATED;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFjdGlvblR5cGVzLmpzIl0sIm5hbWVzIjpbIklOQ1JFTUVOVCIsIkRFQ1JFTUVOVCIsIklOQ1JFTUVOVF9JRl9PREQiLCJJTkNSRU1FTlRfQVNZTkMiLCJDQU5DRUxfSU5DUkVNRU5UX0FTWU5DIiwiQ09VTlRET1dOX1RFUk1JTkFURUQiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUNBO0FBQ08sSUFBTUEsU0FBUyxHQUFHLFdBQWxCOztBQUNBLElBQU1DLFNBQVMsR0FBRyxXQUFsQjs7QUFDQSxJQUFNQyxnQkFBZ0IsR0FBRyxrQkFBekI7O0FBRUEsSUFBTUMsZUFBZSxHQUFHLGlCQUF4Qjs7QUFDQSxJQUFNQyxzQkFBc0IsR0FBRyx3QkFBL0I7O0FBRUEsSUFBTUMsb0JBQW9CLEdBQUcsc0JBQTdCIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9mYXRpaGluY2kvRGVza3RvcC9jb2RlL2NhbGlzbWFsYXIvcmVkdXgtc2FnYS9leGFtcGxlcy9jYW5jZWxsYWJsZS1jb3VudGVyL3NyYyIsInNvdXJjZXNDb250ZW50IjpbIlxuLy8gQWN0aW9uIHR5cGVzXG5leHBvcnQgY29uc3QgSU5DUkVNRU5UID0gJ0lOQ1JFTUVOVCdcbmV4cG9ydCBjb25zdCBERUNSRU1FTlQgPSAnREVDUkVNRU5UJ1xuZXhwb3J0IGNvbnN0IElOQ1JFTUVOVF9JRl9PREQgPSAnSU5DUkVNRU5UX0lGX09ERCdcblxuZXhwb3J0IGNvbnN0IElOQ1JFTUVOVF9BU1lOQyA9ICdJTkNSRU1FTlRfQVNZTkMnXG5leHBvcnQgY29uc3QgQ0FOQ0VMX0lOQ1JFTUVOVF9BU1lOQyA9ICdDQU5DRUxfSU5DUkVNRU5UX0FTWU5DJ1xuXG5leHBvcnQgY29uc3QgQ09VTlRET1dOX1RFUk1JTkFURUQgPSAnQ09VTlRET1dOX1RFUk1JTkFURUQnXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "actionTypes.js"
      ],
      "names": [
        "INCREMENT",
        "DECREMENT",
        "INCREMENT_IF_ODD",
        "INCREMENT_ASYNC",
        "CANCEL_INCREMENT_ASYNC",
        "COUNTDOWN_TERMINATED"
      ],
      "mappings": ";;;;;;AACA;AACO,IAAMA,SAAS,GAAG,WAAlB;;AACA,IAAMC,SAAS,GAAG,WAAlB;;AACA,IAAMC,gBAAgB,GAAG,kBAAzB;;AAEA,IAAMC,eAAe,GAAG,iBAAxB;;AACA,IAAMC,sBAAsB,GAAG,wBAA/B;;AAEA,IAAMC,oBAAoB,GAAG,sBAA7B",
      "sourceRoot": "/Users/fatihinci/Desktop/code/calismalar/redux-saga/examples/cancellable-counter/src",
      "sourcesContent": [
        "\n// Action types\nexport const INCREMENT = 'INCREMENT'\nexport const DECREMENT = 'DECREMENT'\nexport const INCREMENT_IF_ODD = 'INCREMENT_IF_ODD'\n\nexport const INCREMENT_ASYNC = 'INCREMENT_ASYNC'\nexport const CANCEL_INCREMENT_ASYNC = 'CANCEL_INCREMENT_ASYNC'\n\nexport const COUNTDOWN_TERMINATED = 'COUNTDOWN_TERMINATED'\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1668276197698
  },
  "{\"sourceRoot\":\"/Users/fatihinci/Desktop/code/calismalar/redux-saga/examples/cancellable-counter/src/sagas\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/fatihinci/Desktop/code/calismalar/redux-saga/examples/cancellable-counter\",\"filename\":\"/Users/fatihinci/Desktop/code/calismalar/redux-saga/examples/cancellable-counter/src/sagas/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"cjs\",\"root\":\"/Users/fatihinci/Desktop/code/calismalar/redux-saga/examples/cancellable-counter\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"syntax-dynamic-import\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4:cjs": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/fatihinci/Desktop/code/calismalar/redux-saga/examples/cancellable-counter/src/sagas",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/fatihinci/Desktop/code/calismalar/redux-saga/examples/cancellable-counter",
      "filename": "/Users/fatihinci/Desktop/code/calismalar/redux-saga/examples/cancellable-counter/src/sagas/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "cjs",
      "root": "/Users/fatihinci/Desktop/code/calismalar/redux-saga/examples/cancellable-counter",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-dynamic-import",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/fatihinci/Desktop/code/calismalar/redux-saga/examples/cancellable-counter/src/sagas/index.js",
        "plugins": [
          "jsx",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/fatihinci/Desktop/code/calismalar/redux-saga/examples/cancellable-counter/src/sagas/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/fatihinci/Desktop/code/calismalar/redux-saga/examples/cancellable-counter/src/sagas",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.incrementAsync = incrementAsync;\nexports.watchIncrementAsync = watchIncrementAsync;\nexports.decrementAsync = decrementAsync;\nexports.watchDecrementAsync = watchDecrementAsync;\nexports[\"default\"] = rootSaga;\nexports.countdown = void 0;\n\nvar _effects = require(\"redux-saga/effects\");\n\nvar _reduxSaga = require(\"redux-saga\");\n\nvar _actionTypes = require(\"../actionTypes\");\n\nvar _marked =\n/*#__PURE__*/\nregeneratorRuntime.mark(incrementAsync),\n    _marked2 =\n/*#__PURE__*/\nregeneratorRuntime.mark(watchIncrementAsync),\n    _marked3 =\n/*#__PURE__*/\nregeneratorRuntime.mark(decrementAsync),\n    _marked4 =\n/*#__PURE__*/\nregeneratorRuntime.mark(watchDecrementAsync),\n    _marked5 =\n/*#__PURE__*/\nregeneratorRuntime.mark(rootSaga);\n\nvar action = function action(type) {\n  return {\n    type: type\n  };\n};\n/*eslint-disable no-console*/\n\n\nvar countdown = function countdown(secs) {\n  console.log('countdown', secs);\n  return (0, _reduxSaga.eventChannel)(function (listener) {\n    var iv = setInterval(function () {\n      secs -= 1;\n      console.log('countdown', secs);\n      if (secs > 0) listener(secs);else {\n        listener(_reduxSaga.END);\n        clearInterval(iv);\n        console.log('countdown terminated');\n      }\n    }, 1000);\n    return function () {\n      clearInterval(iv);\n      console.log('countdown cancelled');\n    };\n  });\n};\n\nexports.countdown = countdown;\n\nfunction incrementAsync(_ref) {\n  var value, chan, seconds;\n  return regeneratorRuntime.wrap(function incrementAsync$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          value = _ref.value;\n          _context.next = 3;\n          return (0, _effects.call)(countdown, value);\n\n        case 3:\n          chan = _context.sent;\n          _context.prev = 4;\n\n        case 5:\n          if (!true) {\n            _context.next = 13;\n            break;\n          }\n\n          _context.next = 8;\n          return (0, _effects.take)(chan);\n\n        case 8:\n          seconds = _context.sent;\n          _context.next = 11;\n          return (0, _effects.put)({\n            type: _actionTypes.INCREMENT_ASYNC,\n            value: seconds\n          });\n\n        case 11:\n          _context.next = 5;\n          break;\n\n        case 13:\n          _context.prev = 13;\n          _context.next = 16;\n          return (0, _effects.cancelled)();\n\n        case 16:\n          if (_context.sent) {\n            _context.next = 21;\n            break;\n          }\n\n          _context.next = 19;\n          return (0, _effects.put)(action(_actionTypes.INCREMENT));\n\n        case 19:\n          _context.next = 21;\n          return (0, _effects.put)(action(_actionTypes.COUNTDOWN_TERMINATED));\n\n        case 21:\n          chan.close();\n          return _context.finish(13);\n\n        case 23:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[4,, 13, 23]]);\n}\n\nfunction watchIncrementAsync() {\n  var _action;\n\n  return regeneratorRuntime.wrap(function watchIncrementAsync$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n\n        case 1:\n          if (!true) {\n            _context2.next = 9;\n            break;\n          }\n\n          _context2.next = 4;\n          return (0, _effects.take)(_actionTypes.INCREMENT_ASYNC);\n\n        case 4:\n          _action = _context2.sent;\n          _context2.next = 7;\n          return (0, _effects.race)([(0, _effects.call)(incrementAsync, _action), (0, _effects.take)(_actionTypes.CANCEL_INCREMENT_ASYNC)]);\n\n        case 7:\n          _context2.next = 1;\n          break;\n\n        case 9:\n          _context2.prev = 9;\n          console.log('watchIncrementAsync terminated');\n          return _context2.finish(9);\n\n        case 12:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0,, 9, 12]]);\n}\n\nfunction decrementAsync(_ref2) {\n  var value, chan, seconds;\n  return regeneratorRuntime.wrap(function decrementAsync$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          value = _ref2.value;\n          _context3.next = 3;\n          return (0, _effects.call)(countdown, value);\n\n        case 3:\n          chan = _context3.sent;\n          _context3.prev = 4;\n\n        case 5:\n          if (!true) {\n            _context3.next = 13;\n            break;\n          }\n\n          _context3.next = 8;\n          return (0, _effects.take)(chan);\n\n        case 8:\n          seconds = _context3.sent;\n          _context3.next = 11;\n          return (0, _effects.put)({\n            type: _actionTypes.DECREMENT_ASYNC,\n            value: seconds\n          });\n\n        case 11:\n          _context3.next = 5;\n          break;\n\n        case 13:\n          _context3.prev = 13;\n          _context3.next = 16;\n          return (0, _effects.cancelled)();\n\n        case 16:\n          if (_context3.sent) {\n            _context3.next = 21;\n            break;\n          }\n\n          _context3.next = 19;\n          return (0, _effects.put)(action(_actionTypes.DECREMENT));\n\n        case 19:\n          _context3.next = 21;\n          return (0, _effects.put)(action(_actionTypes.COUNTDOWN_TERMINATED));\n\n        case 21:\n          chan.close();\n          return _context3.finish(13);\n\n        case 23:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[4,, 13, 23]]);\n}\n\nfunction watchDecrementAsync() {\n  var _action2;\n\n  return regeneratorRuntime.wrap(function watchDecrementAsync$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n\n        case 1:\n          if (!true) {\n            _context4.next = 9;\n            break;\n          }\n\n          _context4.next = 4;\n          return (0, _effects.take)(_actionTypes.DECREMENT_ASYNC);\n\n        case 4:\n          _action2 = _context4.sent;\n          _context4.next = 7;\n          return (0, _effects.race)([(0, _effects.call)(decrementAsync, _action2), (0, _effects.take)(_actionTypes.CANCEL_DECREMENT_ASYNC)]);\n\n        case 7:\n          _context4.next = 1;\n          break;\n\n        case 9:\n          _context4.prev = 9;\n          console.log('watchDecrementAsync terminated');\n          return _context4.finish(9);\n\n        case 12:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[0,, 9, 12]]);\n}\n\nfunction rootSaga() {\n  return regeneratorRuntime.wrap(function rootSaga$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return (0, _effects.fork)(watchIncrementAsync);\n\n        case 2:\n          _context5.next = 4;\n          return (0, _effects.fork)(watchDecrementAsync);\n\n        case 4:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "incrementAsync",
        "watchIncrementAsync",
        "decrementAsync",
        "watchDecrementAsync",
        "rootSaga",
        "action",
        "type",
        "countdown",
        "secs",
        "console",
        "log",
        "listener",
        "iv",
        "setInterval",
        "END",
        "clearInterval",
        "value",
        "chan",
        "seconds",
        "INCREMENT_ASYNC",
        "INCREMENT",
        "COUNTDOWN_TERMINATED",
        "close",
        "CANCEL_INCREMENT_ASYNC",
        "DECREMENT_ASYNC",
        "DECREMENT",
        "CANCEL_DECREMENT_ASYNC"
      ],
      "mappings": ";;;;;;;;;;;;AAEA;;AACA;;AACA;;;;wBAiCiBA,c;;;wBAeAC,mB;;;wBAcAC,c;;;wBAeAC,mB;;;wBAaQC,Q;;AAhFzB,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,IAAI;AAAA,SAAK;AAAEA,IAAAA,IAAI,EAAJA;AAAF,GAAL;AAAA,CAAnB;AAEA;;;AACO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAC,IAAI,EAAI;AAC/BC,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,IAAzB;AACA,SAAO,6BAAa,UAAAG,QAAQ,EAAI;AAC9B,QAAMC,EAAE,GAAGC,WAAW,CAAC,YAAM;AAC3BL,MAAAA,IAAI,IAAI,CAAR;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,IAAzB;AACA,UAAIA,IAAI,GAAG,CAAX,EAAcG,QAAQ,CAACH,IAAD,CAAR,CAAd,KACK;AACHG,QAAAA,QAAQ,CAACG,cAAD,CAAR;AACAC,QAAAA,aAAa,CAACH,EAAD,CAAb;AACAH,QAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACD;AACF,KATqB,EASnB,IATmB,CAAtB;AAUA,WAAO,YAAM;AACXK,MAAAA,aAAa,CAACH,EAAD,CAAb;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACD,KAHD;AAID,GAfM,CAAP;AAgBD,CAlBM;;;;AAoBA,SAAUV,cAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2BgB,UAAAA,KAA3B,QAA2BA,KAA3B;AAAA;AACQ,iBAAM,mBAAKT,SAAL,EAAgBS,KAAhB,CAAN;;AADR;AACCC,UAAAA,IADD;AAAA;;AAAA;AAAA,eAGI,IAHJ;AAAA;AAAA;AAAA;;AAAA;AAIa,iBAAM,mBAAKA,IAAL,CAAN;;AAJb;AAIGC,UAAAA,OAJH;AAAA;AAKD,iBAAM,kBAAI;AAAEZ,YAAAA,IAAI,EAAEa,4BAAR;AAAyBH,YAAAA,KAAK,EAAEE;AAAhC,WAAJ,CAAN;;AALC;AAAA;AAAA;;AAAA;AAAA;AAAA;AAQG,iBAAM,yBAAN;;AARH;AAAA;AAAA;AAAA;AAAA;;AAAA;AASD,iBAAM,kBAAIb,MAAM,CAACe,sBAAD,CAAV,CAAN;;AATC;AAAA;AAUD,iBAAM,kBAAIf,MAAM,CAACgB,iCAAD,CAAV,CAAN;;AAVC;AAYHJ,UAAAA,IAAI,CAACK,KAAL;AAZG;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAeA,SAAUrB,mBAAV;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,eAEI,IAFJ;AAAA;AAAA;AAAA;;AAAA;AAGc,iBAAM,mBAAKkB,4BAAL,CAAN;;AAHd;AAGKd,UAAAA,OAHL;AAAA;AAMD,iBAAM,mBAAK,CAAC,mBAAKL,cAAL,EAAqBK,OAArB,CAAD,EAA+B,mBAAKkB,mCAAL,CAA/B,CAAL,CAAN;;AANC;AAAA;AAAA;;AAAA;AAAA;AASHd,UAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;AATG;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAcA,SAAUR,cAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2Bc,UAAAA,KAA3B,SAA2BA,KAA3B;AAAA;AACQ,iBAAM,mBAAKT,SAAL,EAAgBS,KAAhB,CAAN;;AADR;AACCC,UAAAA,IADD;AAAA;;AAAA;AAAA,eAGI,IAHJ;AAAA;AAAA;AAAA;;AAAA;AAIa,iBAAM,mBAAKA,IAAL,CAAN;;AAJb;AAIGC,UAAAA,OAJH;AAAA;AAKD,iBAAM,kBAAI;AAAEZ,YAAAA,IAAI,EAAEkB,4BAAR;AAAyBR,YAAAA,KAAK,EAAEE;AAAhC,WAAJ,CAAN;;AALC;AAAA;AAAA;;AAAA;AAAA;AAAA;AAQG,iBAAM,yBAAN;;AARH;AAAA;AAAA;AAAA;AAAA;;AAAA;AASD,iBAAM,kBAAIb,MAAM,CAACoB,sBAAD,CAAV,CAAN;;AATC;AAAA;AAUD,iBAAM,kBAAIpB,MAAM,CAACgB,iCAAD,CAAV,CAAN;;AAVC;AAYHJ,UAAAA,IAAI,CAACK,KAAL;AAZG;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAeA,SAAUnB,mBAAV;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,eAEI,IAFJ;AAAA;AAAA;AAAA;;AAAA;AAGc,iBAAM,mBAAKqB,4BAAL,CAAN;;AAHd;AAGKnB,UAAAA,QAHL;AAAA;AAMD,iBAAM,mBAAK,CAAC,mBAAKH,cAAL,EAAqBG,QAArB,CAAD,EAA+B,mBAAKqB,mCAAL,CAA/B,CAAL,CAAN;;AANC;AAAA;AAAA;;AAAA;AAAA;AASHjB,UAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;AATG;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAaQ,SAAUN,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACb,iBAAM,mBAAKH,mBAAL,CAAN;;AADa;AAAA;AAEb,iBAAM,mBAAKE,mBAAL,CAAN;;AAFa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA",
      "sourceRoot": "/Users/fatihinci/Desktop/code/calismalar/redux-saga/examples/cancellable-counter/src/sagas",
      "sourcesContent": [
        "/* eslint-disable no-constant-condition */\n\nimport { take, put, call, fork, race, cancelled } from 'redux-saga/effects'\nimport { eventChannel, END } from 'redux-saga'\nimport {\n  INCREMENT_ASYNC,\n  INCREMENT,\n  CANCEL_INCREMENT_ASYNC,\n  CANCEL_DECREMENT_ASYNC,\n  COUNTDOWN_TERMINATED,\n  DECREMENT,\n  DECREMENT_ASYNC,\n} from '../actionTypes'\n\nconst action = type => ({ type })\n\n/*eslint-disable no-console*/\nexport const countdown = secs => {\n  console.log('countdown', secs)\n  return eventChannel(listener => {\n    const iv = setInterval(() => {\n      secs -= 1\n      console.log('countdown', secs)\n      if (secs > 0) listener(secs)\n      else {\n        listener(END)\n        clearInterval(iv)\n        console.log('countdown terminated')\n      }\n    }, 1000)\n    return () => {\n      clearInterval(iv)\n      console.log('countdown cancelled')\n    }\n  })\n}\n\nexport function* incrementAsync({ value }) {\n  const chan = yield call(countdown, value)\n  try {\n    while (true) {\n      let seconds = yield take(chan)\n      yield put({ type: INCREMENT_ASYNC, value: seconds })\n    }\n  } finally {\n    if (!(yield cancelled())) {\n      yield put(action(INCREMENT))\n      yield put(action(COUNTDOWN_TERMINATED))\n    }\n    chan.close()\n  }\n}\nexport function* watchIncrementAsync() {\n  try {\n    while (true) {\n      const action = yield take(INCREMENT_ASYNC)\n      // starts a 'Race' between an async increment and a user cancel action\n      // if user cancel action wins, the incrementAsync will be cancelled automatically\n      yield race([call(incrementAsync, action), take(CANCEL_INCREMENT_ASYNC)])\n    }\n  } finally {\n    console.log('watchIncrementAsync terminated')\n  }\n}\n\n\nexport function* decrementAsync({ value }) {\n  const chan = yield call(countdown, value)\n  try {\n    while (true) {\n      let seconds = yield take(chan)\n      yield put({ type: DECREMENT_ASYNC, value: seconds })\n    }\n  } finally {\n    if (!(yield cancelled())) {\n      yield put(action(DECREMENT))\n      yield put(action(COUNTDOWN_TERMINATED))\n    }\n    chan.close()\n  }\n}\nexport function* watchDecrementAsync() {\n  try {\n    while (true) {\n      const action = yield take(DECREMENT_ASYNC)\n      // starts a 'Race' between an async increment and a user cancel action\n      // if user cancel action wins, the incrementAsync will be cancelled automatically\n      yield race([call(decrementAsync, action), take(CANCEL_DECREMENT_ASYNC)])\n    }\n  } finally {\n    console.log('watchDecrementAsync terminated')\n  }\n}\n\nexport default function* rootSaga() {\n  yield fork(watchIncrementAsync)\n  yield fork(watchDecrementAsync)\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1668331480164
  },
  "{\"sourceRoot\":\"/Users/fatihinci/Desktop/code/calismalar/redux-saga/examples/cancellable-counter/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/fatihinci/Desktop/code/calismalar/redux-saga/examples/cancellable-counter\",\"filename\":\"/Users/fatihinci/Desktop/code/calismalar/redux-saga/examples/cancellable-counter/src/actionTypes.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"cjs\",\"root\":\"/Users/fatihinci/Desktop/code/calismalar/redux-saga/examples/cancellable-counter\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"syntax-dynamic-import\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4:cjs": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/fatihinci/Desktop/code/calismalar/redux-saga/examples/cancellable-counter/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/fatihinci/Desktop/code/calismalar/redux-saga/examples/cancellable-counter",
      "filename": "/Users/fatihinci/Desktop/code/calismalar/redux-saga/examples/cancellable-counter/src/actionTypes.js",
      "babelrc": false,
      "configFile": false,
      "envName": "cjs",
      "root": "/Users/fatihinci/Desktop/code/calismalar/redux-saga/examples/cancellable-counter",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-dynamic-import",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/fatihinci/Desktop/code/calismalar/redux-saga/examples/cancellable-counter/src/actionTypes.js",
        "plugins": [
          "jsx",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/fatihinci/Desktop/code/calismalar/redux-saga/examples/cancellable-counter/src/actionTypes.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/fatihinci/Desktop/code/calismalar/redux-saga/examples/cancellable-counter/src",
        "sourceFileName": "actionTypes.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.COUNTDOWN_TERMINATED = exports.CANCEL_DECREMENT_ASYNC = exports.DECREMENT_ASYNC = exports.CANCEL_INCREMENT_ASYNC = exports.INCREMENT_ASYNC = exports.INCREMENT_IF_ODD = exports.DECREMENT = exports.INCREMENT = void 0;\n// Action types\nvar INCREMENT = 'INCREMENT';\nexports.INCREMENT = INCREMENT;\nvar DECREMENT = 'DECREMENT';\nexports.DECREMENT = DECREMENT;\nvar INCREMENT_IF_ODD = 'INCREMENT_IF_ODD';\nexports.INCREMENT_IF_ODD = INCREMENT_IF_ODD;\nvar INCREMENT_ASYNC = 'INCREMENT_ASYNC';\nexports.INCREMENT_ASYNC = INCREMENT_ASYNC;\nvar CANCEL_INCREMENT_ASYNC = 'CANCEL_INCREMENT_ASYNC';\nexports.CANCEL_INCREMENT_ASYNC = CANCEL_INCREMENT_ASYNC;\nvar DECREMENT_ASYNC = 'DECREMENT_ASYNC';\nexports.DECREMENT_ASYNC = DECREMENT_ASYNC;\nvar CANCEL_DECREMENT_ASYNC = 'CANCEL_DECREMENT_ASYNC';\nexports.CANCEL_DECREMENT_ASYNC = CANCEL_DECREMENT_ASYNC;\nvar COUNTDOWN_TERMINATED = 'COUNTDOWN_TERMINATED';\nexports.COUNTDOWN_TERMINATED = COUNTDOWN_TERMINATED;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFjdGlvblR5cGVzLmpzIl0sIm5hbWVzIjpbIklOQ1JFTUVOVCIsIkRFQ1JFTUVOVCIsIklOQ1JFTUVOVF9JRl9PREQiLCJJTkNSRU1FTlRfQVNZTkMiLCJDQU5DRUxfSU5DUkVNRU5UX0FTWU5DIiwiREVDUkVNRU5UX0FTWU5DIiwiQ0FOQ0VMX0RFQ1JFTUVOVF9BU1lOQyIsIkNPVU5URE9XTl9URVJNSU5BVEVEIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFDQTtBQUNPLElBQU1BLFNBQVMsR0FBRyxXQUFsQjs7QUFDQSxJQUFNQyxTQUFTLEdBQUcsV0FBbEI7O0FBQ0EsSUFBTUMsZ0JBQWdCLEdBQUcsa0JBQXpCOztBQUVBLElBQU1DLGVBQWUsR0FBRyxpQkFBeEI7O0FBQ0EsSUFBTUMsc0JBQXNCLEdBQUcsd0JBQS9COztBQUVBLElBQU1DLGVBQWUsR0FBRyxpQkFBeEI7O0FBQ0EsSUFBTUMsc0JBQXNCLEdBQUcsd0JBQS9COztBQUVBLElBQU1DLG9CQUFvQixHQUFHLHNCQUE3QiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvZmF0aWhpbmNpL0Rlc2t0b3AvY29kZS9jYWxpc21hbGFyL3JlZHV4LXNhZ2EvZXhhbXBsZXMvY2FuY2VsbGFibGUtY291bnRlci9zcmMiLCJzb3VyY2VzQ29udGVudCI6WyJcbi8vIEFjdGlvbiB0eXBlc1xuZXhwb3J0IGNvbnN0IElOQ1JFTUVOVCA9ICdJTkNSRU1FTlQnXG5leHBvcnQgY29uc3QgREVDUkVNRU5UID0gJ0RFQ1JFTUVOVCdcbmV4cG9ydCBjb25zdCBJTkNSRU1FTlRfSUZfT0REID0gJ0lOQ1JFTUVOVF9JRl9PREQnXG5cbmV4cG9ydCBjb25zdCBJTkNSRU1FTlRfQVNZTkMgPSAnSU5DUkVNRU5UX0FTWU5DJ1xuZXhwb3J0IGNvbnN0IENBTkNFTF9JTkNSRU1FTlRfQVNZTkMgPSAnQ0FOQ0VMX0lOQ1JFTUVOVF9BU1lOQydcblxuZXhwb3J0IGNvbnN0IERFQ1JFTUVOVF9BU1lOQyA9ICdERUNSRU1FTlRfQVNZTkMnXG5leHBvcnQgY29uc3QgQ0FOQ0VMX0RFQ1JFTUVOVF9BU1lOQyA9ICdDQU5DRUxfREVDUkVNRU5UX0FTWU5DJ1xuXG5leHBvcnQgY29uc3QgQ09VTlRET1dOX1RFUk1JTkFURUQgPSAnQ09VTlRET1dOX1RFUk1JTkFURUQnXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "actionTypes.js"
      ],
      "names": [
        "INCREMENT",
        "DECREMENT",
        "INCREMENT_IF_ODD",
        "INCREMENT_ASYNC",
        "CANCEL_INCREMENT_ASYNC",
        "DECREMENT_ASYNC",
        "CANCEL_DECREMENT_ASYNC",
        "COUNTDOWN_TERMINATED"
      ],
      "mappings": ";;;;;;AACA;AACO,IAAMA,SAAS,GAAG,WAAlB;;AACA,IAAMC,SAAS,GAAG,WAAlB;;AACA,IAAMC,gBAAgB,GAAG,kBAAzB;;AAEA,IAAMC,eAAe,GAAG,iBAAxB;;AACA,IAAMC,sBAAsB,GAAG,wBAA/B;;AAEA,IAAMC,eAAe,GAAG,iBAAxB;;AACA,IAAMC,sBAAsB,GAAG,wBAA/B;;AAEA,IAAMC,oBAAoB,GAAG,sBAA7B",
      "sourceRoot": "/Users/fatihinci/Desktop/code/calismalar/redux-saga/examples/cancellable-counter/src",
      "sourcesContent": [
        "\n// Action types\nexport const INCREMENT = 'INCREMENT'\nexport const DECREMENT = 'DECREMENT'\nexport const INCREMENT_IF_ODD = 'INCREMENT_IF_ODD'\n\nexport const INCREMENT_ASYNC = 'INCREMENT_ASYNC'\nexport const CANCEL_INCREMENT_ASYNC = 'CANCEL_INCREMENT_ASYNC'\n\nexport const DECREMENT_ASYNC = 'DECREMENT_ASYNC'\nexport const CANCEL_DECREMENT_ASYNC = 'CANCEL_DECREMENT_ASYNC'\n\nexport const COUNTDOWN_TERMINATED = 'COUNTDOWN_TERMINATED'\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1668331022518
  }
}