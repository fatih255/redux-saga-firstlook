{
  "{\"sourceRoot\":\"/Users/fatihinci/Desktop/code/calismalar/redux-saga/examples/async/test\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/fatihinci/Desktop/code/calismalar/redux-saga/examples/async\",\"filename\":\"/Users/fatihinci/Desktop/code/calismalar/redux-saga/examples/async/test/sagas.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/Users/fatihinci/Desktop/code/calismalar/redux-saga/examples/async\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"syntax-dynamic-import\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/fatihinci/Desktop/code/calismalar/redux-saga/examples/async/test",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/fatihinci/Desktop/code/calismalar/redux-saga/examples/async",
      "filename": "/Users/fatihinci/Desktop/code/calismalar/redux-saga/examples/async/test/sagas.js",
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "/Users/fatihinci/Desktop/code/calismalar/redux-saga/examples/async",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-dynamic-import",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/fatihinci/Desktop/code/calismalar/redux-saga/examples/async/test/sagas.js",
        "plugins": [
          "jsx",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/fatihinci/Desktop/code/calismalar/redux-saga/examples/async/test/sagas.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/fatihinci/Desktop/code/calismalar/redux-saga/examples/async/test",
        "sourceFileName": "sagas.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _tape = _interopRequireDefault(require(\"tape\"));\n\nvar _effects = require(\"redux-saga/effects\");\n\nvar _sagas = require(\"../src/sagas\");\n\nvar actions = _interopRequireWildcard(require(\"../src/actions\"));\n\nvar _selectors = require(\"../src/reducers/selectors\");\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n(0, _tape[\"default\"])('fetchPosts Saga', function (t) {\n  var mockPosts = [1, 2, 3];\n  var redditName = 'react_reddit';\n  var generator = (0, _sagas.fetchPosts)(redditName);\n  t.deepEqual(generator.next().value, (0, _effects.put)(actions.requestPosts(redditName)), 'must dispatch a requestPosts action');\n  t.deepEqual(generator.next().value, (0, _effects.call)(_sagas.fetchPostsApi, redditName), 'must call fetchPostsApi with reddit name');\n  t.deepEqual(generator.next(mockPosts).value, (0, _effects.put)(actions.receivePosts(redditName, mockPosts)), 'must dispatch a receivePosts action with posts');\n  t.ok(generator.next().done, 'must finish');\n  t.end();\n});\n(0, _tape[\"default\"])('invalidateReddit Saga', function (t) {\n  var generator = (0, _sagas.invalidateReddit)();\n  t.deepEqual(generator.next().value, (0, _effects.take)(actions.INVALIDATE_REDDIT), 'must take a SELECT_REDDIT action');\n  t.deepEqual(generator.next({\n    reddit: 'new_reddit_1'\n  }).value, (0, _effects.call)(_sagas.fetchPosts, 'new_reddit_1'), 'must call fetchPosts with new reddit');\n  t.deepEqual(generator.next().value, (0, _effects.take)(actions.INVALIDATE_REDDIT), 'must go back to beginning of loop');\n  t.end();\n});\n(0, _tape[\"default\"])('nextRedditChange Saga when switching to new reddit', function (t) {\n  var generator = (0, _sagas.nextRedditChange)();\n  t.deepEqual(generator.next().value, (0, _effects.select)(_selectors.selectedRedditSelector), 'must select current reddit from store');\n  t.deepEqual(generator.next('prev_reddit').value, (0, _effects.take)(actions.SELECT_REDDIT), 'must take a SELECT_REDDIT action');\n  t.deepEqual(generator.next().value, (0, _effects.select)(_selectors.selectedRedditSelector), 'must select newly selected reddit from store');\n  t.deepEqual(generator.next('new_reddit').value, (0, _effects.select)(_selectors.postsByRedditSelector), 'must select posts by reddit from store');\n  t.deepEqual(generator.next({}).value, (0, _effects.fork)(_sagas.fetchPosts, 'new_reddit'), \"delegate to fetchPosts for new reddit's posts\");\n  t.deepEqual(generator.next().value, (0, _effects.select)(_selectors.selectedRedditSelector), 'must go back to beginning of loop');\n  t.end();\n});\n(0, _tape[\"default\"])('nextRedditChange Saga when same reddit is selected', function (t) {\n  var generator = (0, _sagas.nextRedditChange)();\n  generator.next();\n  generator.next('prev_reddit');\n  generator.next();\n  generator.next('prev_reddit');\n  t.deepEqual(generator.next().value, (0, _effects.select)(_selectors.selectedRedditSelector), 'must go back to beginning of loop');\n  t.end();\n});\n(0, _tape[\"default\"])('nextRedditChange Saga when posts were previously loaded', function (t) {\n  var generator = (0, _sagas.nextRedditChange)();\n  generator.next();\n  generator.next('prev_reddit');\n  generator.next();\n  generator.next('new_reddit');\n  var postsByReddit = {\n    new_reddit: ['cached_post']\n  };\n  t.deepEqual(generator.next(postsByReddit).value, (0, _effects.select)(_selectors.selectedRedditSelector), 'must go back to beginning of loop');\n  t.end();\n});\n(0, _tape[\"default\"])('startup Saga', function (t) {\n  var generator = (0, _sagas.startup)();\n  t.deepEqual(generator.next().value, (0, _effects.select)(_selectors.selectedRedditSelector), 'gets currently selected reddit');\n  t.deepEqual(generator.next('selected_reddit').value, (0, _effects.fork)(_sagas.fetchPosts, 'selected_reddit'), 'delegates to fetchPosts to get posts');\n  t.ok(generator.next().done, 'must finish');\n  t.end();\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "sagas.js"
      ],
      "names": [
        "t",
        "mockPosts",
        "redditName",
        "generator",
        "deepEqual",
        "next",
        "value",
        "actions",
        "requestPosts",
        "fetchPostsApi",
        "receivePosts",
        "ok",
        "done",
        "end",
        "INVALIDATE_REDDIT",
        "reddit",
        "fetchPosts",
        "selectedRedditSelector",
        "SELECT_REDDIT",
        "postsByRedditSelector",
        "postsByReddit",
        "new_reddit"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;AAEA,sBAAK,iBAAL,EAAwB,UAAAA,CAAC,EAAI;AAC3B,MAAMC,SAAS,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAlB;AACA,MAAMC,UAAU,GAAG,cAAnB;AACA,MAAMC,SAAS,GAAG,uBAAWD,UAAX,CAAlB;AACAF,EAAAA,CAAC,CAACI,SAAF,CAAYD,SAAS,CAACE,IAAV,GAAiBC,KAA7B,EAAoC,kBAAIC,OAAO,CAACC,YAAR,CAAqBN,UAArB,CAAJ,CAApC,EAA2E,qCAA3E;AACAF,EAAAA,CAAC,CAACI,SAAF,CAAYD,SAAS,CAACE,IAAV,GAAiBC,KAA7B,EAAoC,mBAAKG,oBAAL,EAAoBP,UAApB,CAApC,EAAqE,0CAArE;AACAF,EAAAA,CAAC,CAACI,SAAF,CACED,SAAS,CAACE,IAAV,CAAeJ,SAAf,EAA0BK,KAD5B,EAEE,kBAAIC,OAAO,CAACG,YAAR,CAAqBR,UAArB,EAAiCD,SAAjC,CAAJ,CAFF,EAGE,gDAHF;AAKAD,EAAAA,CAAC,CAACW,EAAF,CAAKR,SAAS,CAACE,IAAV,GAAiBO,IAAtB,EAA4B,aAA5B;AACAZ,EAAAA,CAAC,CAACa,GAAF;AACD,CAbD;AAeA,sBAAK,uBAAL,EAA8B,UAAAb,CAAC,EAAI;AACjC,MAAMG,SAAS,GAAG,8BAAlB;AACAH,EAAAA,CAAC,CAACI,SAAF,CAAYD,SAAS,CAACE,IAAV,GAAiBC,KAA7B,EAAoC,mBAAKC,OAAO,CAACO,iBAAb,CAApC,EAAqE,kCAArE;AACAd,EAAAA,CAAC,CAACI,SAAF,CACED,SAAS,CAACE,IAAV,CAAe;AAAEU,IAAAA,MAAM,EAAE;AAAV,GAAf,EAA2CT,KAD7C,EAEE,mBAAKU,iBAAL,EAAiB,cAAjB,CAFF,EAGE,sCAHF;AAKAhB,EAAAA,CAAC,CAACI,SAAF,CAAYD,SAAS,CAACE,IAAV,GAAiBC,KAA7B,EAAoC,mBAAKC,OAAO,CAACO,iBAAb,CAApC,EAAqE,mCAArE;AACAd,EAAAA,CAAC,CAACa,GAAF;AACD,CAVD;AAYA,sBAAK,oDAAL,EAA2D,UAAAb,CAAC,EAAI;AAC9D,MAAMG,SAAS,GAAG,8BAAlB;AACAH,EAAAA,CAAC,CAACI,SAAF,CAAYD,SAAS,CAACE,IAAV,GAAiBC,KAA7B,EAAoC,qBAAOW,iCAAP,CAApC,EAAoE,uCAApE;AACAjB,EAAAA,CAAC,CAACI,SAAF,CAAYD,SAAS,CAACE,IAAV,CAAe,aAAf,EAA8BC,KAA1C,EAAiD,mBAAKC,OAAO,CAACW,aAAb,CAAjD,EAA8E,kCAA9E;AACAlB,EAAAA,CAAC,CAACI,SAAF,CAAYD,SAAS,CAACE,IAAV,GAAiBC,KAA7B,EAAoC,qBAAOW,iCAAP,CAApC,EAAoE,8CAApE;AACAjB,EAAAA,CAAC,CAACI,SAAF,CACED,SAAS,CAACE,IAAV,CAAe,YAAf,EAA6BC,KAD/B,EAEE,qBAAOa,gCAAP,CAFF,EAGE,wCAHF;AAKAnB,EAAAA,CAAC,CAACI,SAAF,CAAYD,SAAS,CAACE,IAAV,CAAe,EAAf,EAAmBC,KAA/B,EAAsC,mBAAKU,iBAAL,EAAiB,YAAjB,CAAtC,EAAsE,+CAAtE;AACAhB,EAAAA,CAAC,CAACI,SAAF,CAAYD,SAAS,CAACE,IAAV,GAAiBC,KAA7B,EAAoC,qBAAOW,iCAAP,CAApC,EAAoE,mCAApE;AACAjB,EAAAA,CAAC,CAACa,GAAF;AACD,CAbD;AAeA,sBAAK,oDAAL,EAA2D,UAAAb,CAAC,EAAI;AAC9D,MAAMG,SAAS,GAAG,8BAAlB;AACAA,EAAAA,SAAS,CAACE,IAAV;AACAF,EAAAA,SAAS,CAACE,IAAV,CAAe,aAAf;AACAF,EAAAA,SAAS,CAACE,IAAV;AACAF,EAAAA,SAAS,CAACE,IAAV,CAAe,aAAf;AACAL,EAAAA,CAAC,CAACI,SAAF,CAAYD,SAAS,CAACE,IAAV,GAAiBC,KAA7B,EAAoC,qBAAOW,iCAAP,CAApC,EAAoE,mCAApE;AACAjB,EAAAA,CAAC,CAACa,GAAF;AACD,CARD;AAUA,sBAAK,yDAAL,EAAgE,UAAAb,CAAC,EAAI;AACnE,MAAMG,SAAS,GAAG,8BAAlB;AACAA,EAAAA,SAAS,CAACE,IAAV;AACAF,EAAAA,SAAS,CAACE,IAAV,CAAe,aAAf;AACAF,EAAAA,SAAS,CAACE,IAAV;AACAF,EAAAA,SAAS,CAACE,IAAV,CAAe,YAAf;AACA,MAAMe,aAAa,GAAG;AACpBC,IAAAA,UAAU,EAAE,CAAC,aAAD;AADQ,GAAtB;AAGArB,EAAAA,CAAC,CAACI,SAAF,CAAYD,SAAS,CAACE,IAAV,CAAee,aAAf,EAA8Bd,KAA1C,EAAiD,qBAAOW,iCAAP,CAAjD,EAAiF,mCAAjF;AACAjB,EAAAA,CAAC,CAACa,GAAF;AACD,CAXD;AAaA,sBAAK,cAAL,EAAqB,UAAAb,CAAC,EAAI;AACxB,MAAMG,SAAS,GAAG,qBAAlB;AACAH,EAAAA,CAAC,CAACI,SAAF,CAAYD,SAAS,CAACE,IAAV,GAAiBC,KAA7B,EAAoC,qBAAOW,iCAAP,CAApC,EAAoE,gCAApE;AACAjB,EAAAA,CAAC,CAACI,SAAF,CACED,SAAS,CAACE,IAAV,CAAe,iBAAf,EAAkCC,KADpC,EAEE,mBAAKU,iBAAL,EAAiB,iBAAjB,CAFF,EAGE,sCAHF;AAKAhB,EAAAA,CAAC,CAACW,EAAF,CAAKR,SAAS,CAACE,IAAV,GAAiBO,IAAtB,EAA4B,aAA5B;AACAZ,EAAAA,CAAC,CAACa,GAAF;AACD,CAVD",
      "sourceRoot": "/Users/fatihinci/Desktop/code/calismalar/redux-saga/examples/async/test",
      "sourcesContent": [
        "import test from 'tape'\nimport { call, fork, put, select, take } from 'redux-saga/effects'\nimport { fetchPosts, fetchPostsApi, invalidateReddit, nextRedditChange, startup } from '../src/sagas'\nimport * as actions from '../src/actions'\nimport { postsByRedditSelector, selectedRedditSelector } from '../src/reducers/selectors'\n\ntest('fetchPosts Saga', t => {\n  const mockPosts = [1, 2, 3]\n  const redditName = 'react_reddit'\n  const generator = fetchPosts(redditName)\n  t.deepEqual(generator.next().value, put(actions.requestPosts(redditName)), 'must dispatch a requestPosts action')\n  t.deepEqual(generator.next().value, call(fetchPostsApi, redditName), 'must call fetchPostsApi with reddit name')\n  t.deepEqual(\n    generator.next(mockPosts).value,\n    put(actions.receivePosts(redditName, mockPosts)),\n    'must dispatch a receivePosts action with posts',\n  )\n  t.ok(generator.next().done, 'must finish')\n  t.end()\n})\n\ntest('invalidateReddit Saga', t => {\n  const generator = invalidateReddit()\n  t.deepEqual(generator.next().value, take(actions.INVALIDATE_REDDIT), 'must take a SELECT_REDDIT action')\n  t.deepEqual(\n    generator.next({ reddit: 'new_reddit_1' }).value,\n    call(fetchPosts, 'new_reddit_1'),\n    'must call fetchPosts with new reddit',\n  )\n  t.deepEqual(generator.next().value, take(actions.INVALIDATE_REDDIT), 'must go back to beginning of loop')\n  t.end()\n})\n\ntest('nextRedditChange Saga when switching to new reddit', t => {\n  const generator = nextRedditChange()\n  t.deepEqual(generator.next().value, select(selectedRedditSelector), 'must select current reddit from store')\n  t.deepEqual(generator.next('prev_reddit').value, take(actions.SELECT_REDDIT), 'must take a SELECT_REDDIT action')\n  t.deepEqual(generator.next().value, select(selectedRedditSelector), 'must select newly selected reddit from store')\n  t.deepEqual(\n    generator.next('new_reddit').value,\n    select(postsByRedditSelector),\n    'must select posts by reddit from store',\n  )\n  t.deepEqual(generator.next({}).value, fork(fetchPosts, 'new_reddit'), \"delegate to fetchPosts for new reddit's posts\")\n  t.deepEqual(generator.next().value, select(selectedRedditSelector), 'must go back to beginning of loop')\n  t.end()\n})\n\ntest('nextRedditChange Saga when same reddit is selected', t => {\n  const generator = nextRedditChange()\n  generator.next()\n  generator.next('prev_reddit')\n  generator.next()\n  generator.next('prev_reddit')\n  t.deepEqual(generator.next().value, select(selectedRedditSelector), 'must go back to beginning of loop')\n  t.end()\n})\n\ntest('nextRedditChange Saga when posts were previously loaded', t => {\n  const generator = nextRedditChange()\n  generator.next()\n  generator.next('prev_reddit')\n  generator.next()\n  generator.next('new_reddit')\n  const postsByReddit = {\n    new_reddit: ['cached_post'],\n  }\n  t.deepEqual(generator.next(postsByReddit).value, select(selectedRedditSelector), 'must go back to beginning of loop')\n  t.end()\n})\n\ntest('startup Saga', t => {\n  const generator = startup()\n  t.deepEqual(generator.next().value, select(selectedRedditSelector), 'gets currently selected reddit')\n  t.deepEqual(\n    generator.next('selected_reddit').value,\n    fork(fetchPosts, 'selected_reddit'),\n    'delegates to fetchPosts to get posts',\n  )\n  t.ok(generator.next().done, 'must finish')\n  t.end()\n})\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1668276197697
  },
  "{\"sourceRoot\":\"/Users/fatihinci/Desktop/code/calismalar/redux-saga/examples/async/src/sagas\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/fatihinci/Desktop/code/calismalar/redux-saga/examples/async\",\"filename\":\"/Users/fatihinci/Desktop/code/calismalar/redux-saga/examples/async/src/sagas/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/Users/fatihinci/Desktop/code/calismalar/redux-saga/examples/async\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"syntax-dynamic-import\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/fatihinci/Desktop/code/calismalar/redux-saga/examples/async/src/sagas",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/fatihinci/Desktop/code/calismalar/redux-saga/examples/async",
      "filename": "/Users/fatihinci/Desktop/code/calismalar/redux-saga/examples/async/src/sagas/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "/Users/fatihinci/Desktop/code/calismalar/redux-saga/examples/async",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-dynamic-import",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/fatihinci/Desktop/code/calismalar/redux-saga/examples/async/src/sagas/index.js",
        "plugins": [
          "jsx",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/fatihinci/Desktop/code/calismalar/redux-saga/examples/async/src/sagas/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/fatihinci/Desktop/code/calismalar/redux-saga/examples/async/src/sagas",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.fetchPostsApi = fetchPostsApi;\nexports.fetchPosts = fetchPosts;\nexports.invalidateReddit = invalidateReddit;\nexports.nextRedditChange = nextRedditChange;\nexports.startup = startup;\nexports[\"default\"] = root;\n\nvar _effects = require(\"redux-saga/effects\");\n\nvar _isomorphicFetch = _interopRequireDefault(require(\"isomorphic-fetch\"));\n\nvar actions = _interopRequireWildcard(require(\"../actions\"));\n\nvar _selectors = require(\"../reducers/selectors\");\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar _marked =\n/*#__PURE__*/\nregeneratorRuntime.mark(fetchPosts),\n    _marked2 =\n/*#__PURE__*/\nregeneratorRuntime.mark(invalidateReddit),\n    _marked3 =\n/*#__PURE__*/\nregeneratorRuntime.mark(nextRedditChange),\n    _marked4 =\n/*#__PURE__*/\nregeneratorRuntime.mark(startup),\n    _marked5 =\n/*#__PURE__*/\nregeneratorRuntime.mark(root);\n\nfunction fetchPostsApi(reddit) {\n  return (0, _isomorphicFetch[\"default\"])(\"https://www.reddit.com/r/\" + reddit + \".json\").then(function (response) {\n    return response.json();\n  }).then(function (json) {\n    return json.data.children.map(function (child) {\n      return child.data;\n    });\n  });\n}\n\nfunction fetchPosts(reddit) {\n  var posts;\n  return regeneratorRuntime.wrap(function fetchPosts$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return (0, _effects.put)(actions.requestPosts(reddit));\n\n        case 2:\n          _context.next = 4;\n          return (0, _effects.call)(fetchPostsApi, reddit);\n\n        case 4:\n          posts = _context.sent;\n          _context.next = 7;\n          return (0, _effects.put)(actions.receivePosts(reddit, posts));\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\n\nfunction invalidateReddit() {\n  var _ref, reddit;\n\n  return regeneratorRuntime.wrap(function invalidateReddit$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          if (!true) {\n            _context2.next = 9;\n            break;\n          }\n\n          _context2.next = 3;\n          return (0, _effects.take)(actions.INVALIDATE_REDDIT);\n\n        case 3:\n          _ref = _context2.sent;\n          reddit = _ref.reddit;\n          _context2.next = 7;\n          return (0, _effects.call)(fetchPosts, reddit);\n\n        case 7:\n          _context2.next = 0;\n          break;\n\n        case 9:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nfunction nextRedditChange() {\n  var prevReddit, newReddit, postsByReddit;\n  return regeneratorRuntime.wrap(function nextRedditChange$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          if (!true) {\n            _context3.next = 17;\n            break;\n          }\n\n          _context3.next = 3;\n          return (0, _effects.select)(_selectors.selectedRedditSelector);\n\n        case 3:\n          prevReddit = _context3.sent;\n          _context3.next = 6;\n          return (0, _effects.take)(actions.SELECT_REDDIT);\n\n        case 6:\n          _context3.next = 8;\n          return (0, _effects.select)(_selectors.selectedRedditSelector);\n\n        case 8:\n          newReddit = _context3.sent;\n          _context3.next = 11;\n          return (0, _effects.select)(_selectors.postsByRedditSelector);\n\n        case 11:\n          postsByReddit = _context3.sent;\n\n          if (!(prevReddit !== newReddit && !postsByReddit[newReddit])) {\n            _context3.next = 15;\n            break;\n          }\n\n          _context3.next = 15;\n          return (0, _effects.fork)(fetchPosts, newReddit);\n\n        case 15:\n          _context3.next = 0;\n          break;\n\n        case 17:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}\n\nfunction startup() {\n  var selectedReddit;\n  return regeneratorRuntime.wrap(function startup$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return (0, _effects.select)(_selectors.selectedRedditSelector);\n\n        case 2:\n          selectedReddit = _context4.sent;\n          _context4.next = 5;\n          return (0, _effects.fork)(fetchPosts, selectedReddit);\n\n        case 5:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\n\nfunction root() {\n  return regeneratorRuntime.wrap(function root$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return (0, _effects.fork)(startup);\n\n        case 2:\n          _context5.next = 4;\n          return (0, _effects.fork)(nextRedditChange);\n\n        case 4:\n          _context5.next = 6;\n          return (0, _effects.fork)(invalidateReddit);\n\n        case 6:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImZldGNoUG9zdHMiLCJpbnZhbGlkYXRlUmVkZGl0IiwibmV4dFJlZGRpdENoYW5nZSIsInN0YXJ0dXAiLCJyb290IiwiZmV0Y2hQb3N0c0FwaSIsInJlZGRpdCIsInRoZW4iLCJyZXNwb25zZSIsImpzb24iLCJkYXRhIiwiY2hpbGRyZW4iLCJtYXAiLCJjaGlsZCIsImFjdGlvbnMiLCJyZXF1ZXN0UG9zdHMiLCJwb3N0cyIsInJlY2VpdmVQb3N0cyIsIklOVkFMSURBVEVfUkVERElUIiwic2VsZWN0ZWRSZWRkaXRTZWxlY3RvciIsInByZXZSZWRkaXQiLCJTRUxFQ1RfUkVERElUIiwibmV3UmVkZGl0IiwicG9zdHNCeVJlZGRpdFNlbGVjdG9yIiwicG9zdHNCeVJlZGRpdCIsInNlbGVjdGVkUmVkZGl0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7Ozs7Ozs7Ozt3QkFRaUJBLFU7Ozt3QkFNQUMsZ0I7Ozt3QkFPQUMsZ0I7Ozt3QkFXQUMsTzs7O3dCQUtRQyxJOztBQW5DbEIsU0FBU0MsYUFBVCxDQUF1QkMsTUFBdkIsRUFBK0I7QUFDcEMsU0FBTywrREFBa0NBLE1BQWxDLFlBQ0pDLElBREksQ0FDQyxVQUFBQyxRQUFRO0FBQUEsV0FBSUEsUUFBUSxDQUFDQyxJQUFULEVBQUo7QUFBQSxHQURULEVBRUpGLElBRkksQ0FFQyxVQUFBRSxJQUFJO0FBQUEsV0FBSUEsSUFBSSxDQUFDQyxJQUFMLENBQVVDLFFBQVYsQ0FBbUJDLEdBQW5CLENBQXVCLFVBQUFDLEtBQUs7QUFBQSxhQUFJQSxLQUFLLENBQUNILElBQVY7QUFBQSxLQUE1QixDQUFKO0FBQUEsR0FGTCxDQUFQO0FBR0Q7O0FBRU0sU0FBVVYsVUFBVixDQUFxQk0sTUFBckI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDTCxpQkFBTSxrQkFBSVEsT0FBTyxDQUFDQyxZQUFSLENBQXFCVCxNQUFyQixDQUFKLENBQU47O0FBREs7QUFBQTtBQUVTLGlCQUFNLG1CQUFLRCxhQUFMLEVBQW9CQyxNQUFwQixDQUFOOztBQUZUO0FBRUNVLFVBQUFBLEtBRkQ7QUFBQTtBQUdMLGlCQUFNLGtCQUFJRixPQUFPLENBQUNHLFlBQVIsQ0FBcUJYLE1BQXJCLEVBQTZCVSxLQUE3QixDQUFKLENBQU47O0FBSEs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7O0FBTUEsU0FBVWYsZ0JBQVY7QUFBQTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLGVBQ0UsSUFERjtBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUVnQixpQkFBTSxtQkFBS2EsT0FBTyxDQUFDSSxpQkFBYixDQUFOOztBQUZoQjtBQUFBO0FBRUtaLFVBQUFBLE1BRkwsUUFFS0EsTUFGTDtBQUFBO0FBR0gsaUJBQU0sbUJBQUtOLFVBQUwsRUFBaUJNLE1BQWpCLENBQU47O0FBSEc7QUFBQTtBQUFBOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBOztBQU9BLFNBQVVKLGdCQUFWO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLGVBQ0UsSUFERjtBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUVnQixpQkFBTSxxQkFBT2lCLGlDQUFQLENBQU47O0FBRmhCO0FBRUdDLFVBQUFBLFVBRkg7QUFBQTtBQUdILGlCQUFNLG1CQUFLTixPQUFPLENBQUNPLGFBQWIsQ0FBTjs7QUFIRztBQUFBO0FBS2UsaUJBQU0scUJBQU9GLGlDQUFQLENBQU47O0FBTGY7QUFLR0csVUFBQUEsU0FMSDtBQUFBO0FBTW1CLGlCQUFNLHFCQUFPQyxnQ0FBUCxDQUFOOztBQU5uQjtBQU1HQyxVQUFBQSxhQU5IOztBQUFBLGdCQU9DSixVQUFVLEtBQUtFLFNBQWYsSUFBNEIsQ0FBQ0UsYUFBYSxDQUFDRixTQUFELENBUDNDO0FBQUE7QUFBQTtBQUFBOztBQUFBO0FBT3dELGlCQUFNLG1CQUFLdEIsVUFBTCxFQUFpQnNCLFNBQWpCLENBQU47O0FBUHhEO0FBQUE7QUFBQTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFXQSxTQUFVbkIsT0FBVjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNrQixpQkFBTSxxQkFBT2dCLGlDQUFQLENBQU47O0FBRGxCO0FBQ0NNLFVBQUFBLGNBREQ7QUFBQTtBQUVMLGlCQUFNLG1CQUFLekIsVUFBTCxFQUFpQnlCLGNBQWpCLENBQU47O0FBRks7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7O0FBS1EsU0FBVXJCLElBQVY7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ2IsaUJBQU0sbUJBQUtELE9BQUwsQ0FBTjs7QUFEYTtBQUFBO0FBRWIsaUJBQU0sbUJBQUtELGdCQUFMLENBQU47O0FBRmE7QUFBQTtBQUdiLGlCQUFNLG1CQUFLRCxnQkFBTCxDQUFOOztBQUhhO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9mYXRpaGluY2kvRGVza3RvcC9jb2RlL2NhbGlzbWFsYXIvcmVkdXgtc2FnYS9leGFtcGxlcy9hc3luYy9zcmMvc2FnYXMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB0YWtlLCBwdXQsIGNhbGwsIGZvcmssIHNlbGVjdCB9IGZyb20gJ3JlZHV4LXNhZ2EvZWZmZWN0cydcbmltcG9ydCBmZXRjaCBmcm9tICdpc29tb3JwaGljLWZldGNoJ1xuaW1wb3J0ICogYXMgYWN0aW9ucyBmcm9tICcuLi9hY3Rpb25zJ1xuaW1wb3J0IHsgc2VsZWN0ZWRSZWRkaXRTZWxlY3RvciwgcG9zdHNCeVJlZGRpdFNlbGVjdG9yIH0gZnJvbSAnLi4vcmVkdWNlcnMvc2VsZWN0b3JzJ1xuXG5leHBvcnQgZnVuY3Rpb24gZmV0Y2hQb3N0c0FwaShyZWRkaXQpIHtcbiAgcmV0dXJuIGZldGNoKGBodHRwczovL3d3dy5yZWRkaXQuY29tL3IvJHtyZWRkaXR9Lmpzb25gKVxuICAgIC50aGVuKHJlc3BvbnNlID0+IHJlc3BvbnNlLmpzb24oKSlcbiAgICAudGhlbihqc29uID0+IGpzb24uZGF0YS5jaGlsZHJlbi5tYXAoY2hpbGQgPT4gY2hpbGQuZGF0YSkpXG59XG5cbmV4cG9ydCBmdW5jdGlvbiogZmV0Y2hQb3N0cyhyZWRkaXQpIHtcbiAgeWllbGQgcHV0KGFjdGlvbnMucmVxdWVzdFBvc3RzKHJlZGRpdCkpXG4gIGNvbnN0IHBvc3RzID0geWllbGQgY2FsbChmZXRjaFBvc3RzQXBpLCByZWRkaXQpXG4gIHlpZWxkIHB1dChhY3Rpb25zLnJlY2VpdmVQb3N0cyhyZWRkaXQsIHBvc3RzKSlcbn1cblxuZXhwb3J0IGZ1bmN0aW9uKiBpbnZhbGlkYXRlUmVkZGl0KCkge1xuICB3aGlsZSAodHJ1ZSkge1xuICAgIGNvbnN0IHsgcmVkZGl0IH0gPSB5aWVsZCB0YWtlKGFjdGlvbnMuSU5WQUxJREFURV9SRURESVQpXG4gICAgeWllbGQgY2FsbChmZXRjaFBvc3RzLCByZWRkaXQpXG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uKiBuZXh0UmVkZGl0Q2hhbmdlKCkge1xuICB3aGlsZSAodHJ1ZSkge1xuICAgIGNvbnN0IHByZXZSZWRkaXQgPSB5aWVsZCBzZWxlY3Qoc2VsZWN0ZWRSZWRkaXRTZWxlY3RvcilcbiAgICB5aWVsZCB0YWtlKGFjdGlvbnMuU0VMRUNUX1JFRERJVClcblxuICAgIGNvbnN0IG5ld1JlZGRpdCA9IHlpZWxkIHNlbGVjdChzZWxlY3RlZFJlZGRpdFNlbGVjdG9yKVxuICAgIGNvbnN0IHBvc3RzQnlSZWRkaXQgPSB5aWVsZCBzZWxlY3QocG9zdHNCeVJlZGRpdFNlbGVjdG9yKVxuICAgIGlmIChwcmV2UmVkZGl0ICE9PSBuZXdSZWRkaXQgJiYgIXBvc3RzQnlSZWRkaXRbbmV3UmVkZGl0XSkgeWllbGQgZm9yayhmZXRjaFBvc3RzLCBuZXdSZWRkaXQpXG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uKiBzdGFydHVwKCkge1xuICBjb25zdCBzZWxlY3RlZFJlZGRpdCA9IHlpZWxkIHNlbGVjdChzZWxlY3RlZFJlZGRpdFNlbGVjdG9yKVxuICB5aWVsZCBmb3JrKGZldGNoUG9zdHMsIHNlbGVjdGVkUmVkZGl0KVxufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiogcm9vdCgpIHtcbiAgeWllbGQgZm9yayhzdGFydHVwKVxuICB5aWVsZCBmb3JrKG5leHRSZWRkaXRDaGFuZ2UpXG4gIHlpZWxkIGZvcmsoaW52YWxpZGF0ZVJlZGRpdClcbn1cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "fetchPosts",
        "invalidateReddit",
        "nextRedditChange",
        "startup",
        "root",
        "fetchPostsApi",
        "reddit",
        "then",
        "response",
        "json",
        "data",
        "children",
        "map",
        "child",
        "actions",
        "requestPosts",
        "posts",
        "receivePosts",
        "INVALIDATE_REDDIT",
        "selectedRedditSelector",
        "prevReddit",
        "SELECT_REDDIT",
        "newReddit",
        "postsByRedditSelector",
        "postsByReddit",
        "selectedReddit"
      ],
      "mappings": ";;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;;;wBAQiBA,U;;;wBAMAC,gB;;;wBAOAC,gB;;;wBAWAC,O;;;wBAKQC,I;;AAnClB,SAASC,aAAT,CAAuBC,MAAvB,EAA+B;AACpC,SAAO,+DAAkCA,MAAlC,YACJC,IADI,CACC,UAAAC,QAAQ;AAAA,WAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,GADT,EAEJF,IAFI,CAEC,UAAAE,IAAI;AAAA,WAAIA,IAAI,CAACC,IAAL,CAAUC,QAAV,CAAmBC,GAAnB,CAAuB,UAAAC,KAAK;AAAA,aAAIA,KAAK,CAACH,IAAV;AAAA,KAA5B,CAAJ;AAAA,GAFL,CAAP;AAGD;;AAEM,SAAUV,UAAV,CAAqBM,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACL,iBAAM,kBAAIQ,OAAO,CAACC,YAAR,CAAqBT,MAArB,CAAJ,CAAN;;AADK;AAAA;AAES,iBAAM,mBAAKD,aAAL,EAAoBC,MAApB,CAAN;;AAFT;AAECU,UAAAA,KAFD;AAAA;AAGL,iBAAM,kBAAIF,OAAO,CAACG,YAAR,CAAqBX,MAArB,EAA6BU,KAA7B,CAAJ,CAAN;;AAHK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAMA,SAAUf,gBAAV;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,eACE,IADF;AAAA;AAAA;AAAA;;AAAA;AAEgB,iBAAM,mBAAKa,OAAO,CAACI,iBAAb,CAAN;;AAFhB;AAAA;AAEKZ,UAAAA,MAFL,QAEKA,MAFL;AAAA;AAGH,iBAAM,mBAAKN,UAAL,EAAiBM,MAAjB,CAAN;;AAHG;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAOA,SAAUJ,gBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACE,IADF;AAAA;AAAA;AAAA;;AAAA;AAEgB,iBAAM,qBAAOiB,iCAAP,CAAN;;AAFhB;AAEGC,UAAAA,UAFH;AAAA;AAGH,iBAAM,mBAAKN,OAAO,CAACO,aAAb,CAAN;;AAHG;AAAA;AAKe,iBAAM,qBAAOF,iCAAP,CAAN;;AALf;AAKGG,UAAAA,SALH;AAAA;AAMmB,iBAAM,qBAAOC,gCAAP,CAAN;;AANnB;AAMGC,UAAAA,aANH;;AAAA,gBAOCJ,UAAU,KAAKE,SAAf,IAA4B,CAACE,aAAa,CAACF,SAAD,CAP3C;AAAA;AAAA;AAAA;;AAAA;AAOwD,iBAAM,mBAAKtB,UAAL,EAAiBsB,SAAjB,CAAN;;AAPxD;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAWA,SAAUnB,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACkB,iBAAM,qBAAOgB,iCAAP,CAAN;;AADlB;AACCM,UAAAA,cADD;AAAA;AAEL,iBAAM,mBAAKzB,UAAL,EAAiByB,cAAjB,CAAN;;AAFK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKQ,SAAUrB,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACb,iBAAM,mBAAKD,OAAL,CAAN;;AADa;AAAA;AAEb,iBAAM,mBAAKD,gBAAL,CAAN;;AAFa;AAAA;AAGb,iBAAM,mBAAKD,gBAAL,CAAN;;AAHa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA",
      "sourceRoot": "/Users/fatihinci/Desktop/code/calismalar/redux-saga/examples/async/src/sagas",
      "sourcesContent": [
        "import { take, put, call, fork, select } from 'redux-saga/effects'\nimport fetch from 'isomorphic-fetch'\nimport * as actions from '../actions'\nimport { selectedRedditSelector, postsByRedditSelector } from '../reducers/selectors'\n\nexport function fetchPostsApi(reddit) {\n  return fetch(`https://www.reddit.com/r/${reddit}.json`)\n    .then(response => response.json())\n    .then(json => json.data.children.map(child => child.data))\n}\n\nexport function* fetchPosts(reddit) {\n  yield put(actions.requestPosts(reddit))\n  const posts = yield call(fetchPostsApi, reddit)\n  yield put(actions.receivePosts(reddit, posts))\n}\n\nexport function* invalidateReddit() {\n  while (true) {\n    const { reddit } = yield take(actions.INVALIDATE_REDDIT)\n    yield call(fetchPosts, reddit)\n  }\n}\n\nexport function* nextRedditChange() {\n  while (true) {\n    const prevReddit = yield select(selectedRedditSelector)\n    yield take(actions.SELECT_REDDIT)\n\n    const newReddit = yield select(selectedRedditSelector)\n    const postsByReddit = yield select(postsByRedditSelector)\n    if (prevReddit !== newReddit && !postsByReddit[newReddit]) yield fork(fetchPosts, newReddit)\n  }\n}\n\nexport function* startup() {\n  const selectedReddit = yield select(selectedRedditSelector)\n  yield fork(fetchPosts, selectedReddit)\n}\n\nexport default function* root() {\n  yield fork(startup)\n  yield fork(nextRedditChange)\n  yield fork(invalidateReddit)\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1668276197697
  },
  "{\"sourceRoot\":\"/Users/fatihinci/Desktop/code/calismalar/redux-saga/examples/async/src/actions\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/fatihinci/Desktop/code/calismalar/redux-saga/examples/async\",\"filename\":\"/Users/fatihinci/Desktop/code/calismalar/redux-saga/examples/async/src/actions/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/Users/fatihinci/Desktop/code/calismalar/redux-saga/examples/async\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"syntax-dynamic-import\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/fatihinci/Desktop/code/calismalar/redux-saga/examples/async/src/actions",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/fatihinci/Desktop/code/calismalar/redux-saga/examples/async",
      "filename": "/Users/fatihinci/Desktop/code/calismalar/redux-saga/examples/async/src/actions/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "/Users/fatihinci/Desktop/code/calismalar/redux-saga/examples/async",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-dynamic-import",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/fatihinci/Desktop/code/calismalar/redux-saga/examples/async/src/actions/index.js",
        "plugins": [
          "jsx",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/fatihinci/Desktop/code/calismalar/redux-saga/examples/async/src/actions/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/fatihinci/Desktop/code/calismalar/redux-saga/examples/async/src/actions",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.selectReddit = selectReddit;\nexports.invalidateReddit = invalidateReddit;\nexports.requestPosts = requestPosts;\nexports.receivePosts = receivePosts;\nexports.INVALIDATE_REDDIT = exports.SELECT_REDDIT = exports.RECEIVE_POSTS = exports.REQUEST_POSTS = void 0;\nvar REQUEST_POSTS = 'REQUEST_POSTS';\nexports.REQUEST_POSTS = REQUEST_POSTS;\nvar RECEIVE_POSTS = 'RECEIVE_POSTS';\nexports.RECEIVE_POSTS = RECEIVE_POSTS;\nvar SELECT_REDDIT = 'SELECT_REDDIT';\nexports.SELECT_REDDIT = SELECT_REDDIT;\nvar INVALIDATE_REDDIT = 'INVALIDATE_REDDIT';\nexports.INVALIDATE_REDDIT = INVALIDATE_REDDIT;\n\nfunction selectReddit(reddit) {\n  return {\n    type: SELECT_REDDIT,\n    reddit: reddit\n  };\n}\n\nfunction invalidateReddit(reddit) {\n  return {\n    type: INVALIDATE_REDDIT,\n    reddit: reddit\n  };\n}\n\nfunction requestPosts(reddit) {\n  return {\n    type: REQUEST_POSTS,\n    reddit: reddit\n  };\n}\n\nfunction receivePosts(reddit, posts) {\n  return {\n    type: RECEIVE_POSTS,\n    reddit: reddit,\n    posts: posts,\n    receivedAt: new Date().setMilliseconds(0)\n  };\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIlJFUVVFU1RfUE9TVFMiLCJSRUNFSVZFX1BPU1RTIiwiU0VMRUNUX1JFRERJVCIsIklOVkFMSURBVEVfUkVERElUIiwic2VsZWN0UmVkZGl0IiwicmVkZGl0IiwidHlwZSIsImludmFsaWRhdGVSZWRkaXQiLCJyZXF1ZXN0UG9zdHMiLCJyZWNlaXZlUG9zdHMiLCJwb3N0cyIsInJlY2VpdmVkQXQiLCJEYXRlIiwic2V0TWlsbGlzZWNvbmRzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQU8sSUFBTUEsYUFBYSxHQUFHLGVBQXRCOztBQUNBLElBQU1DLGFBQWEsR0FBRyxlQUF0Qjs7QUFDQSxJQUFNQyxhQUFhLEdBQUcsZUFBdEI7O0FBQ0EsSUFBTUMsaUJBQWlCLEdBQUcsbUJBQTFCOzs7QUFFQSxTQUFTQyxZQUFULENBQXNCQyxNQUF0QixFQUE4QjtBQUNuQyxTQUFPO0FBQ0xDLElBQUFBLElBQUksRUFBRUosYUFERDtBQUVMRyxJQUFBQSxNQUFNLEVBQU5BO0FBRkssR0FBUDtBQUlEOztBQUVNLFNBQVNFLGdCQUFULENBQTBCRixNQUExQixFQUFrQztBQUN2QyxTQUFPO0FBQ0xDLElBQUFBLElBQUksRUFBRUgsaUJBREQ7QUFFTEUsSUFBQUEsTUFBTSxFQUFOQTtBQUZLLEdBQVA7QUFJRDs7QUFFTSxTQUFTRyxZQUFULENBQXNCSCxNQUF0QixFQUE4QjtBQUNuQyxTQUFPO0FBQ0xDLElBQUFBLElBQUksRUFBRU4sYUFERDtBQUVMSyxJQUFBQSxNQUFNLEVBQU5BO0FBRkssR0FBUDtBQUlEOztBQUVNLFNBQVNJLFlBQVQsQ0FBc0JKLE1BQXRCLEVBQThCSyxLQUE5QixFQUFxQztBQUMxQyxTQUFPO0FBQ0xKLElBQUFBLElBQUksRUFBRUwsYUFERDtBQUVMSSxJQUFBQSxNQUFNLEVBQU5BLE1BRks7QUFHTEssSUFBQUEsS0FBSyxFQUFMQSxLQUhLO0FBSUxDLElBQUFBLFVBQVUsRUFBRSxJQUFJQyxJQUFKLEdBQVdDLGVBQVgsQ0FBMkIsQ0FBM0I7QUFKUCxHQUFQO0FBTUQiLCJzb3VyY2VSb290IjoiL1VzZXJzL2ZhdGloaW5jaS9EZXNrdG9wL2NvZGUvY2FsaXNtYWxhci9yZWR1eC1zYWdhL2V4YW1wbGVzL2FzeW5jL3NyYy9hY3Rpb25zIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IFJFUVVFU1RfUE9TVFMgPSAnUkVRVUVTVF9QT1NUUydcbmV4cG9ydCBjb25zdCBSRUNFSVZFX1BPU1RTID0gJ1JFQ0VJVkVfUE9TVFMnXG5leHBvcnQgY29uc3QgU0VMRUNUX1JFRERJVCA9ICdTRUxFQ1RfUkVERElUJ1xuZXhwb3J0IGNvbnN0IElOVkFMSURBVEVfUkVERElUID0gJ0lOVkFMSURBVEVfUkVERElUJ1xuXG5leHBvcnQgZnVuY3Rpb24gc2VsZWN0UmVkZGl0KHJlZGRpdCkge1xuICByZXR1cm4ge1xuICAgIHR5cGU6IFNFTEVDVF9SRURESVQsXG4gICAgcmVkZGl0LFxuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpbnZhbGlkYXRlUmVkZGl0KHJlZGRpdCkge1xuICByZXR1cm4ge1xuICAgIHR5cGU6IElOVkFMSURBVEVfUkVERElULFxuICAgIHJlZGRpdCxcbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gcmVxdWVzdFBvc3RzKHJlZGRpdCkge1xuICByZXR1cm4ge1xuICAgIHR5cGU6IFJFUVVFU1RfUE9TVFMsXG4gICAgcmVkZGl0LFxuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiByZWNlaXZlUG9zdHMocmVkZGl0LCBwb3N0cykge1xuICByZXR1cm4ge1xuICAgIHR5cGU6IFJFQ0VJVkVfUE9TVFMsXG4gICAgcmVkZGl0LFxuICAgIHBvc3RzLFxuICAgIHJlY2VpdmVkQXQ6IG5ldyBEYXRlKCkuc2V0TWlsbGlzZWNvbmRzKDApLFxuICB9XG59XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "REQUEST_POSTS",
        "RECEIVE_POSTS",
        "SELECT_REDDIT",
        "INVALIDATE_REDDIT",
        "selectReddit",
        "reddit",
        "type",
        "invalidateReddit",
        "requestPosts",
        "receivePosts",
        "posts",
        "receivedAt",
        "Date",
        "setMilliseconds"
      ],
      "mappings": ";;;;;;;;;;AAAO,IAAMA,aAAa,GAAG,eAAtB;;AACA,IAAMC,aAAa,GAAG,eAAtB;;AACA,IAAMC,aAAa,GAAG,eAAtB;;AACA,IAAMC,iBAAiB,GAAG,mBAA1B;;;AAEA,SAASC,YAAT,CAAsBC,MAAtB,EAA8B;AACnC,SAAO;AACLC,IAAAA,IAAI,EAAEJ,aADD;AAELG,IAAAA,MAAM,EAANA;AAFK,GAAP;AAID;;AAEM,SAASE,gBAAT,CAA0BF,MAA1B,EAAkC;AACvC,SAAO;AACLC,IAAAA,IAAI,EAAEH,iBADD;AAELE,IAAAA,MAAM,EAANA;AAFK,GAAP;AAID;;AAEM,SAASG,YAAT,CAAsBH,MAAtB,EAA8B;AACnC,SAAO;AACLC,IAAAA,IAAI,EAAEN,aADD;AAELK,IAAAA,MAAM,EAANA;AAFK,GAAP;AAID;;AAEM,SAASI,YAAT,CAAsBJ,MAAtB,EAA8BK,KAA9B,EAAqC;AAC1C,SAAO;AACLJ,IAAAA,IAAI,EAAEL,aADD;AAELI,IAAAA,MAAM,EAANA,MAFK;AAGLK,IAAAA,KAAK,EAALA,KAHK;AAILC,IAAAA,UAAU,EAAE,IAAIC,IAAJ,GAAWC,eAAX,CAA2B,CAA3B;AAJP,GAAP;AAMD",
      "sourceRoot": "/Users/fatihinci/Desktop/code/calismalar/redux-saga/examples/async/src/actions",
      "sourcesContent": [
        "export const REQUEST_POSTS = 'REQUEST_POSTS'\nexport const RECEIVE_POSTS = 'RECEIVE_POSTS'\nexport const SELECT_REDDIT = 'SELECT_REDDIT'\nexport const INVALIDATE_REDDIT = 'INVALIDATE_REDDIT'\n\nexport function selectReddit(reddit) {\n  return {\n    type: SELECT_REDDIT,\n    reddit,\n  }\n}\n\nexport function invalidateReddit(reddit) {\n  return {\n    type: INVALIDATE_REDDIT,\n    reddit,\n  }\n}\n\nexport function requestPosts(reddit) {\n  return {\n    type: REQUEST_POSTS,\n    reddit,\n  }\n}\n\nexport function receivePosts(reddit, posts) {\n  return {\n    type: RECEIVE_POSTS,\n    reddit,\n    posts,\n    receivedAt: new Date().setMilliseconds(0),\n  }\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1668276197697
  },
  "{\"sourceRoot\":\"/Users/fatihinci/Desktop/code/calismalar/redux-saga/examples/async/src/reducers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/fatihinci/Desktop/code/calismalar/redux-saga/examples/async\",\"filename\":\"/Users/fatihinci/Desktop/code/calismalar/redux-saga/examples/async/src/reducers/selectors.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/Users/fatihinci/Desktop/code/calismalar/redux-saga/examples/async\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}},{\"key\":\"syntax-dynamic-import\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":true,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/fatihinci/Desktop/code/calismalar/redux-saga/examples/async/src/reducers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/fatihinci/Desktop/code/calismalar/redux-saga/examples/async",
      "filename": "/Users/fatihinci/Desktop/code/calismalar/redux-saga/examples/async/src/reducers/selectors.js",
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "/Users/fatihinci/Desktop/code/calismalar/redux-saga/examples/async",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-dynamic-import",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": true,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/fatihinci/Desktop/code/calismalar/redux-saga/examples/async/src/reducers/selectors.js",
        "plugins": [
          "jsx",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/fatihinci/Desktop/code/calismalar/redux-saga/examples/async/src/reducers/selectors.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/fatihinci/Desktop/code/calismalar/redux-saga/examples/async/src/reducers",
        "sourceFileName": "selectors.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.postsByRedditSelector = exports.selectedRedditSelector = void 0;\n\nvar selectedRedditSelector = function selectedRedditSelector(state) {\n  return state.selectedReddit;\n};\n\nexports.selectedRedditSelector = selectedRedditSelector;\n\nvar postsByRedditSelector = function postsByRedditSelector(state) {\n  return state.postsByReddit;\n};\n\nexports.postsByRedditSelector = postsByRedditSelector;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlbGVjdG9ycy5qcyJdLCJuYW1lcyI6WyJzZWxlY3RlZFJlZGRpdFNlbGVjdG9yIiwic3RhdGUiLCJzZWxlY3RlZFJlZGRpdCIsInBvc3RzQnlSZWRkaXRTZWxlY3RvciIsInBvc3RzQnlSZWRkaXQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFDTyxJQUFNQSxzQkFBc0IsR0FBRyxTQUF6QkEsc0JBQXlCLENBQUFDLEtBQUs7QUFBQSxTQUFJQSxLQUFLLENBQUNDLGNBQVY7QUFBQSxDQUFwQzs7OztBQUNBLElBQU1DLHFCQUFxQixHQUFHLFNBQXhCQSxxQkFBd0IsQ0FBQUYsS0FBSztBQUFBLFNBQUlBLEtBQUssQ0FBQ0csYUFBVjtBQUFBLENBQW5DIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9mYXRpaGluY2kvRGVza3RvcC9jb2RlL2NhbGlzbWFsYXIvcmVkdXgtc2FnYS9leGFtcGxlcy9hc3luYy9zcmMvcmVkdWNlcnMiLCJzb3VyY2VzQ29udGVudCI6WyJcbmV4cG9ydCBjb25zdCBzZWxlY3RlZFJlZGRpdFNlbGVjdG9yID0gc3RhdGUgPT4gc3RhdGUuc2VsZWN0ZWRSZWRkaXRcbmV4cG9ydCBjb25zdCBwb3N0c0J5UmVkZGl0U2VsZWN0b3IgPSBzdGF0ZSA9PiBzdGF0ZS5wb3N0c0J5UmVkZGl0XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "selectors.js"
      ],
      "names": [
        "selectedRedditSelector",
        "state",
        "selectedReddit",
        "postsByRedditSelector",
        "postsByReddit"
      ],
      "mappings": ";;;;;;;AACO,IAAMA,sBAAsB,GAAG,SAAzBA,sBAAyB,CAAAC,KAAK;AAAA,SAAIA,KAAK,CAACC,cAAV;AAAA,CAApC;;;;AACA,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAAAF,KAAK;AAAA,SAAIA,KAAK,CAACG,aAAV;AAAA,CAAnC",
      "sourceRoot": "/Users/fatihinci/Desktop/code/calismalar/redux-saga/examples/async/src/reducers",
      "sourcesContent": [
        "\nexport const selectedRedditSelector = state => state.selectedReddit\nexport const postsByRedditSelector = state => state.postsByReddit\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1668276197697
  }
}